/* eslint-disable */
/* @formatter:off */

import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqv/7cMS+A9QQzsYuaeeAAAA0gAAABKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqo=';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if ( !unlocked ) {
    unlock();
    unlocked = true;
  }
};

const onDecodeSuccess = decodedAudio => {
  if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
    wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 1, phetAudioContext.sampleRate ) );
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
if ( decodePromise ) {
  decodePromise
    .then( decodedAudio => {
      if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
        wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
        safeUnlock();
      }
    } )
    .catch( e => {
      console.warn( 'promise rejection caught for audio decode, error = ' + e );
      safeUnlock();
    } );
}
export default wrappedAudioBuffer;