/* eslint-disable */
import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr/+3LEbgPAQAIADIAAIAAANIAAAASqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqg==';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = asyncLoader.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if ( !unlocked ) {
    unlock();
    unlocked = true;
  }
};

const onDecodeSuccess = decodedAudio => {
  if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
    wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 1, phetAudioContext.sampleRate ) );
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
if ( decodePromise ) {
  decodePromise
    .then( decodedAudio => {
      if ( wrappedAudioBuffer.audioBufferProperty.value === null ) {
        wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
        safeUnlock();
      }
    } )
    .catch( e => {
      console.warn( 'promise rejection caught for audio decode, error = ' + e );
      safeUnlock();
    } );
}
export default wrappedAudioBuffer;